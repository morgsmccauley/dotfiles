% gcloud

# SSH in to GCE instance
gcloud --project <project> compute ssh ubuntu@<machine>

# Describe compute instance
gcloud --project <project> compute instances describe <machine>

# Reset compute instance
gcloud --project <project> compute instances reset <machine>

# Copy file from local to remote
gcloud --project <project> compute scp <file> ubuntu@<machine>:<file>

# Copy file from remote to local
gcloud --project <project> compute scp ubuntu@<machine>:<remote_file> <local_file>

# Get secret value
gcloud --project=<project> secrets versions access latest --secret=<secret> | xargs echo

# Stream cloud build logs
gcloud --project=<project> builds log --stream <build_id>

# Trigger cloud build
gcloud --project=<project> builds triggers run <trigger_id> --branch=<branch> 

# SSH tunnel through compute instance
gcloud --project=<project> compute ssh ubuntu@<machine> -- -L <port>:<host>:<port> 

# List Cloud Run service revisions
: <project>;: <run_service>; gcloud --project=<project> run revisions list --service=<run_service_name> --region=<run_service_region>

# Tail Cloud Run logs
: <project>;: <run_service>; gcloud --project=<project> beta run services logs tail <run_service_name> --region=<run_service_region>

$ file: ls
# $ project: gcloud projects list --- --headers 1 --column 1
$ project: echo "pagoda-data-stack-dev\npagoda-data-stack-prod"

$ run_service: gcloud --project=<project> run services list --- --headers 1
$ run_service_name: echo $run_service | awk '{$1=$1; print $2}'
$ run_service_region: echo $run_service | awk '{$1=$1; print $3}'

$ build_id: gcloud --project=<project> builds list --format="table(id, substitutions.TRIGGER_NAME, status)" --- --headers 1 --column 1
$ trigger_id: gcloud --project=<project> builds triggers list --format="table(name, github.owner, github.name, github.push.branch)" --- --headers 1 --column 1
$ secret: gcloud --project <project> secrets list --- --headers 1 --column 1
$ machine: gcloud --project <project> compute instances list --- --headers 1 --column 1
$ branch: git branch | awk '{print $NF}' | sed 's/^\*//'
