% kubernetes, k8s

# Set kube config
export KUBECONFIG=~/.kube/<config-files>

# Get pods in namespace
kubectl get pods -n <namespace>

# Get pods in all namespaces
kubectl get pods --all-namespaces

# Describe pod
kubectl -n <namespace> describe pod <pod-name>

# Get pod logs
kubectl -n <namespace> logs <pod-name>

# Follow pod logs
kubectl -n <namespace> logs -f --tail 0 <pod-name>

# Get pod logs (previous container)
kubectl -n <namespace> logs <pod-name> --previous

# Execute command in pod
kubectl -n <namespace> exec -it <pod-name> -- <command>

# Get shell in pod
kubectl -n <namespace> exec -it <pod-name> -- /bin/sh

# Port forward to pod
kubectl -n <namespace> port-forward <pod-name> <local-port>:<pod-port>

# Get deployments
kubectl get deployments -n <namespace>

# Scale deployment
kubectl -n <namespace> scale deployment <deployment-name> --replicas=<count>

# Follow deployment logs
kubectl -n <namespace> logs -f --tail 0 deployment/<deployment-name>

# Rollout status of deployment
kubectl -n <namespace> rollout status deployment/<deployment-name>

# Rollback deployment
kubectl -n <namespace> rollout undo deployment/<deployment-name>

# Rollback to specific revision
kubectl -n <namespace> rollout undo deployment/<deployment-name> --to-revision=<revision>

# Pause deployment rollout
kubectl -n <namespace> rollout pause deployment/<deployment-name>

# Resume deployment rollout
kubectl -n <namespace> rollout resume deployment/<deployment-name>

# View rollout history
kubectl -n <namespace> rollout history deployment/<deployment-name>

# Restart deployment (rolling restart)
kubectl -n <namespace> rollout restart deployment/<deployment-name>

# Get services
kubectl get services -n <namespace>

# Get nodes
kubectl get nodes

# Get events
kubectl get events -n <namespace>

# Get configmaps
kubectl get configmaps -n <namespace>

# List secrets
kubectl get secrets -n <namespace>

# Get decoded secret
echo <secret-entry> | base64 -d

# Apply manifest
kubectl apply -f <manifest-file>

# Delete resource
kubectl delete -f <manifest-file>

# Get resource usage
kubectl top pod -n <namespace>

# Get cluster info
kubectl cluster-info

# Switch context
kubectl config use-context <context-name>

# Get current context
kubectl config current-context

# List contexts
kubectl config get-contexts

# Create namespace
kubectl create namespace <namespace>

# Get persistent volumes
kubectl get pv

# Get persistent volume claims
kubectl get pvc -n <namespace>

$ namespace: kubectl get namespaces --- --headers 1 --column 1
$ pod-name: kubectl get pods -n "$namespace" --- --headers 1 --column 1
$ deployment-name: kubectl get deployments -n "$namespace" --- --headers 1 --column 1
$ context-name: kubectl config get-contexts -o name
$ manifest-file: ls *.{yaml,yml} 2>/dev/null || true
$ config-files: ls ~/.kube | grep .yml
$ secret: kubectl get secrets -n <namespace> --- --headers 1 --column 1
$ secret-entry: kubectl get secrets -n <namespace> <secret> -o yaml | yq -r '.data | to_entries | .[] | [.key, .value] | @tsv' --- --column 2 --delimiter '\t'
